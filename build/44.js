webpackJsonp([44],{1803:function(e,o,s){"use strict";Object.defineProperty(o,"__esModule",{value:!0}),s.d(o,"CoreCoursesMyOverviewPageModule",function(){return d});var t=s(0),r=s(3),n=s(2),i=s(1922),c=s(16),a=s(879),l=s(886),u=this&&this.__decorate||function(e,o,s,t){var r,n=arguments.length,i=n<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,o,s,t);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(n<3?r(i):n>3?r(o,s,i):r(o,s))||i);return n>3&&i&&Object.defineProperty(o,s,i),i},d=function(){function e(){}return e=u([Object(t.I)({declarations:[i.a],imports:[c.a,a.a,l.a,r.l.forChild(i.a),n.b.forChild()]})],e)}()},1922:function(e,o,s){"use strict";s.d(o,"a",function(){return g});var t=s(0),r=s(3),n=s(12),i=s(4),c=s(9),a=s(42),l=s(243),u=s(21),d=s(112),h=s(143),f=s(5),p=(s.n(f),this&&this.__decorate||function(e,o,s,t){var r,n=arguments.length,i=n<3?o:null===t?t=Object.getOwnPropertyDescriptor(o,s):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,o,s,t);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(n<3?r(i):n>3?r(o,s,i):r(o,s))||i);return n>3&&i&&Object.defineProperty(o,s,i),i}),v=this&&this.__metadata||function(e,o){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,o)},g=function(){function e(e,o,s,t,r,n,i,c,a){this.navCtrl=e,this.coursesProvider=o,this.domUtils=s,this.myOverviewProvider=t,this.courseHelper=r,this.sitesProvider=n,this.siteHomeProvider=i,this.courseOptionsDelegate=c,this.eventsProvider=a,this.tabsReady=!1,this.tabShown="courses",this.timeline={sort:"sortbydates",events:[],loaded:!1,canLoadMore:void 0},this.timelineCourses={courses:[],loaded:!1,canLoadMore:!1},this.courses={selected:"inprogress",loaded:!1,filter:"",past:[],inprogress:[],future:[]},this.showFilter=!1,this.tabs=[],this.prefetchCoursesData={inprogress:{},past:{},future:{}},this.prefetchIconsInitialized=!1}return e.prototype.ionViewDidLoad=function(){var e=this;this.searchEnabled=!this.coursesProvider.isSearchCoursesDisabledInSite(),this.downloadAllCoursesEnabled=!this.coursesProvider.isDownloadCoursesDisabledInSite(),this.updateSiteObserver=this.eventsProvider.on(n.a.SITE_UPDATED,function(){var o=e.downloadAllCoursesEnabled;e.searchEnabled=!e.coursesProvider.isSearchCoursesDisabledInSite(),e.downloadAllCoursesEnabled=!e.coursesProvider.isDownloadCoursesDisabledInSite(),!o&&e.downloadAllCoursesEnabled&&e.courses.loaded&&e.initPrefetchCoursesIcons()}),this.siteHomeProvider.isAvailable().then(function(o){var s=e.sitesProvider.getCurrentSite(),t=s.getInfo()&&0===s.getInfo().userhomepage;e.siteHomeEnabled=o,e.firstSelectedTab=t?0:2,e.tabsReady=!0})},e.prototype.fetchMyOverviewTimeline=function(e){var o=this;return this.myOverviewProvider.getActionEventsByTimesort(e).then(function(e){o.timeline.events=e.events,o.timeline.canLoadMore=e.canLoadMore}).catch(function(e){o.domUtils.showErrorModalDefault(e,"Error getting my overview data.")})},e.prototype.fetchMyOverviewTimelineByCourses=function(){var e=this;return this.fetchUserCourses().then(function(o){var s,t=f().unix();if(o=o.filter(function(e){return e.startdate<=t&&(!e.enddate||e.enddate>=t)}),e.timelineCourses.courses=o,o.length>0)return s=o.map(function(e){return e.id}),e.myOverviewProvider.getActionEventsByCourses(s).then(function(o){e.timelineCourses.courses.forEach(function(e){e.events=o[e.id].events,e.canLoadMore=o[e.id].canLoadMore})})}).catch(function(o){e.domUtils.showErrorModalDefault(o,"Error getting my overview data.")})},e.prototype.fetchMyOverviewCourses=function(){var e=this;return this.fetchUserCourses().then(function(o){var s=f().unix();e.courses.past=[],e.courses.inprogress=[],e.courses.future=[],o.forEach(function(o){o.startdate>s?e.courses.future.push(o):o.enddate&&o.enddate<s?e.courses.past.push(o):e.courses.inprogress.push(o)}),e.courses.filter="",e.showFilter=!1,e.filteredCourses=e.courses[e.courses.selected],e.initPrefetchCoursesIcons()}).catch(function(o){e.domUtils.showErrorModalDefault(o,"Error getting my overview data.")})},e.prototype.fetchUserCourses=function(){var e=this;return this.coursesProvider.getUserCourses().then(function(o){var s=o.map(function(e){return e.id});return e.coursesProvider.getCoursesAdminAndNavOptions(s).then(function(e){return o.forEach(function(o){o.navOptions=e.navOptions[o.id],o.admOptions=e.admOptions[o.id]}),o.sort(function(e,o){var s=e.fullname.toLowerCase(),t=o.fullname.toLowerCase();return s.localeCompare(t)})})})},e.prototype.switchFilter=function(){this.showFilter=!this.showFilter,this.courses.filter="",this.filteredCourses=this.courses[this.courses.selected]},e.prototype.filterChanged=function(e){var o=e.target.value&&e.target.value.trim().toLowerCase();this.filteredCourses=o&&this.courses[this.courses.selected]?this.courses[this.courses.selected].filter(function(e){return e.fullname.toLowerCase().indexOf(o)>-1}):this.courses[this.courses.selected]},e.prototype.refreshMyOverview=function(e){var o=this,s=[];return"timeline"==this.tabShown&&(s.push(this.myOverviewProvider.invalidateActionEventsByTimesort()),s.push(this.myOverviewProvider.invalidateActionEventsByCourses())),s.push(this.coursesProvider.invalidateUserCourses()),s.push(this.courseOptionsDelegate.clearAndInvalidateCoursesOptions()),Promise.all(s).finally(function(){switch(o.tabShown){case"timeline":switch(o.timeline.sort){case"sortbydates":return o.fetchMyOverviewTimeline();case"sortbycourses":return o.fetchMyOverviewTimelineByCourses()}break;case"courses":return o.prefetchIconsInitialized=!1,o.fetchMyOverviewCourses()}}).finally(function(){e.complete()})},e.prototype.switchSort=function(){var e=this;switch(this.timeline.sort){case"sortbydates":this.timeline.loaded||this.fetchMyOverviewTimeline().finally(function(){e.timeline.loaded=!0});break;case"sortbycourses":this.timelineCourses.loaded||this.fetchMyOverviewTimelineByCourses().finally(function(){e.timelineCourses.loaded=!0})}},e.prototype.tabChanged=function(e){var o=this;switch(this.tabShown=e,this.tabShown){case"timeline":this.timeline.loaded||this.fetchMyOverviewTimeline().finally(function(){o.timeline.loaded=!0});break;case"courses":this.courses.loaded||this.fetchMyOverviewCourses().finally(function(){o.courses.loaded=!0})}},e.prototype.loadMoreTimeline=function(){return this.fetchMyOverviewTimeline(this.timeline.canLoadMore)},e.prototype.loadMoreCourse=function(e){return this.myOverviewProvider.getActionEventsByCourse(e.id,e.canLoadMore).then(function(o){e.events=e.events.concat(o.events),e.canLoadMore=o.canLoadMore})},e.prototype.openSearch=function(){this.navCtrl.push("CoreCoursesSearchPage")},e.prototype.selectedChanged=function(){this.filteredCourses=this.courses[this.courses.selected]},e.prototype.prefetchCourses=function(){var e=this,o=this.courses.selected,s=this.prefetchCoursesData[o],t=s.icon;return s.icon="spinner",s.badge="",this.courseHelper.confirmAndPrefetchCourses(this.courses[o],function(e){s.badge=e.count+" / "+e.total}).then(function(){s.icon="refresh"}).catch(function(o){e.isDestroyed||(e.domUtils.showErrorModalDefault(o,"core.course.errordownloadingcourse",!0),s.icon=t)}).finally(function(){s.badge=""})},e.prototype.initPrefetchCoursesIcons=function(){var e=this;!this.prefetchIconsInitialized&&this.downloadAllCoursesEnabled&&(this.prefetchIconsInitialized=!0,Object.keys(this.prefetchCoursesData).forEach(function(o){!e.courses[o]||e.courses[o].length<2?e.prefetchCoursesData[o].icon="":e.courseHelper.determineCoursesStatus(e.courses[o]).then(function(s){var t=e.courseHelper.getCourseStatusIconAndTitleFromStatus(s).icon;"spinner"==t&&(t="cloud-download"),e.prefetchCoursesData[o].icon=t})}))},e.prototype.ngOnDestroy=function(){this.isDestroyed=!0,this.updateSiteObserver&&this.updateSiteObserver.off()},e=p([Object(t.m)({selector:"page-core-courses-my-overview",template:'<ion-header>\n    <ion-navbar>\n        <ion-title>{{ \'core.courses.courseoverview\' | translate }}</ion-title>\n\n        <ion-buttons end>\n            <button *ngIf="tabShown == \'courses\' && courses[courses.selected] && courses[courses.selected].length > 5" ion-button icon-only [attr.aria-label]="\'core.courses.filtermycourses\' | translate" (click)="switchFilter()">\n                <ion-icon name="funnel"></ion-icon>\n            </button>\n            <button *ngIf="searchEnabled" ion-button icon-only (click)="openSearch()" [attr.aria-label]="\'core.courses.searchcourses\' | translate">\n                <ion-icon name="search"></ion-icon>\n            </button>\n        </ion-buttons>\n    </ion-navbar>\n</ion-header>\n<ion-content>\n    <core-tabs [selectedIndex]="firstSelectedTab" [hideUntil]="tabsReady">\n        \x3c!-- Site home tab. --\x3e\n        <core-tab [show]="siteHomeEnabled" [title]="\'core.sitehome.sitehome\' | translate" (ionSelect)="tabChanged(\'sitehome\')">\n            <ng-template>\n                <core-sitehome-index></core-sitehome-index>\n            </ng-template>\n        </core-tab>\n\n        \x3c!-- Timeline tab. --\x3e\n        <core-tab [title]="\'core.courses.timeline\' | translate" (ionSelect)="tabChanged(\'timeline\')">\n            <ng-template>\n                <ion-content>\n                    <ion-refresher [enabled]="timeline.loaded || timelineCourses.loaded || courses.loaded" (ionRefresh)="refreshMyOverview($event)">\n                        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n                    </ion-refresher>\n\n                    <div no-padding [hidden]="!(timeline.loaded || timelineCourses.loaded)">\n                        <ion-select [(ngModel)]="timeline.sort" (ngModelChange)="switchSort()" interface="popover">\n                            <ion-option value="sortbydates">{{ \'core.courses.sortbydates\' | translate }}</ion-option>\n                            <ion-option value="sortbycourses">{{ \'core.courses.sortbycourses\' | translate }}</ion-option>\n                        </ion-select>\n                    </div>\n                    <core-loading [hideUntil]="timeline.loaded" [hidden]="timeline.sort != \'sortbydates\'" class="core-loading-center">\n                        <core-courses-overview-events [events]="timeline.events" showCourse="true" [canLoadMore]="timeline.canLoadMore" (loadMore)="loadMoreTimeline()"></core-courses-overview-events>\n                    </core-loading>\n                    <core-loading [hideUntil]="timelineCourses.loaded" [hidden]="timeline.sort != \'sortbycourses\'" class="core-loading-center">\n                        <ion-grid no-padding>\n                            <ion-row no-padding>\n                                <ion-col *ngFor="let course of timelineCourses.courses" no-padding col-12 col-md-6>\n                                    <core-courses-course-progress [course]="course">\n                                        <core-courses-overview-events [events]="course.events" [canLoadMore]="course.canLoadMore" (loadMore)="loadMoreCourse(course)"></core-courses-overview-events>\n                                    </core-courses-course-progress>\n                                </ion-col>\n                            </ion-row>\n                        </ion-grid>\n                        <core-empty-box *ngIf="timelineCourses.courses.length == 0" image="assets/img/icons/courses.svg" [message]="\'core.courses.nocoursesoverview\' | translate"></core-empty-box>\n                    </core-loading>\n                </ion-content>\n            </ng-template>\n        </core-tab>\n\n        \x3c!-- Courses tab. --\x3e\n        <core-tab [title]="\'core.courses.courses\' | translate" (ionSelect)="tabChanged(\'courses\')">\n            <ng-template>\n                <ion-content>\n                    <ion-refresher [enabled]="timeline.loaded || timelineCourses.loaded || courses.loaded" (ionRefresh)="refreshMyOverview($event)">\n                        <ion-refresher-content pullingText="{{ \'core.pulltorefresh\' | translate }}"></ion-refresher-content>\n                    </ion-refresher>\n\n                    <core-loading [hideUntil]="courses.loaded" class="core-loading-center">\n                        \x3c!-- "Time" selector. --\x3e\n                        <div no-padding class="clearfix" [hidden]="showFilter">\n                            <ion-select [title]="\'core.show\' | translate" [(ngModel)]="courses.selected" float-start (ngModelChange)="selectedChanged()" interface="popover">\n                                <ion-option value="inprogress">{{ \'core.courses.inprogress\' | translate }}</ion-option>\n                                <ion-option value="future">{{ \'core.courses.future\' | translate }}</ion-option>\n                                <ion-option value="past">{{ \'core.courses.past\' | translate }}</ion-option>\n                            </ion-select>\n                            \x3c!-- Download all courses. --\x3e\n                            <div *ngIf="downloadAllCoursesEnabled && courses[courses.selected] && courses[courses.selected].length > 1" class="core-button-spinner" float-end>\n                                <button *ngIf="prefetchCoursesData[courses.selected].icon && prefetchCoursesData[courses.selected].icon != \'spinner\'" ion-button icon-only clear color="dark" (click)="prefetchCourses()">\n                                    <ion-icon [name]="prefetchCoursesData[courses.selected].icon"></ion-icon>\n                                </button>\n                                <ion-spinner *ngIf="!prefetchCoursesData[courses.selected].icon || prefetchCoursesData[courses.selected].icon == \'spinner\'"></ion-spinner>\n                                <span float-end *ngIf="prefetchCoursesData[courses.selected].badge">{{prefetchCoursesData[courses.selected].badge}}</span>\n                            </div>\n                        </div>\n                        \x3c!-- Filter courses. --\x3e\n                        <ion-searchbar *ngIf="showFilter" [(ngModel)]="courses.filter" (ionInput)="filterChanged($event)" (ionCancel)="filterChanged()" [placeholder]="\'core.courses.filtermycourses\' | translate">\n                        </ion-searchbar>\n                        \x3c!-- List of courses. --\x3e\n                        <div>\n                            <ion-grid no-padding>\n                                <ion-row no-padding>\n                                    <ion-col *ngFor="let course of filteredCourses" no-padding col-12 col-sm-6 col-md-6 col-lg-4 col-xl-4 align-self-stretch>\n                                        <core-courses-course-progress [course]="course" class="core-courseoverview"></core-courses-course-progress>\n                                    </ion-col>\n                                </ion-row>\n                            </ion-grid>\n\n                            <core-empty-box *ngIf="courses[courses.selected].length == 0 && courses.selected == \'inprogress\'" image="assets/img/icons/courses.svg" [message]="\'core.courses.nocoursesinprogress\' | translate"></core-empty-box>\n                            <core-empty-box *ngIf="courses[courses.selected].length == 0 && courses.selected == \'future\'" image="assets/img/icons/courses.svg" [message]="\'core.courses.nocoursesfuture\' | translate"></core-empty-box>\n                            <core-empty-box *ngIf="courses[courses.selected].length == 0 && courses.selected == \'past\'" image="assets/img/icons/courses.svg" [message]="\'core.courses.nocoursespast\' | translate"></core-empty-box>\n                        </div>\n                    </core-loading>\n                </ion-content>\n            </ng-template>\n        </core-tab>\n    </core-tabs>\n</ion-content>'}),v("design:paramtypes",[r.q,a.a,c.a,l.a,u.a,i.a,h.a,d.a,n.a])],e)}()}});